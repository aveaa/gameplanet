//==========================//
//üî∏ PLANET üåé GAME üî∏ ¬© 2018//
//==========================//
//üî∏ PLANET üåé BOT üî∏ ¬© 2018 //
//==========================//

const Discord = require('discord.js');
const request = require('request');
const botconfig = require('./botconfig.json');
const errors = require('./utils/errors.js');
let coins = require("./coins.json");
let xp = require("./xp.json");
const fs = require('fs');
const bot = new Discord.Client();
let p = "-"

/* —Ä–∞–Ω–¥–æ–º–Ω—ã–µ –≤—ã—Ä–æ–∂–µ–Ω–∏—è –≤ .setFooter(); */
const server_n = [
    "CONFA GAMES",
    "–í–Ω–∏–º–∞–Ω–∏–µ | ¬© –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã", 
    "–ë—É–¥—å –ø–æ–∑–∏—Ç–∏–≤–Ω—ã–º!", 
    "–ù–µ –∫—É—Ä–∏", 
    "–ü—Ä–æ–≤–µ—Ç—Ä–∏ –∫–æ–º–Ω–∞—Ç—É!", 
    "–ó–∞–π–º–∏—Å—å —Å–ø–æ—Ä—Ç–æ–º", 
    "–ù–µ –¥–µ–ª–∞–π –≥–ª—É–ø–æ—Å—Ç–∏", 
    "–ù—É –±—É–¥—å –ß–°–í!", 
    "–ë—É–¥—å –∞–¥–µ–∫–≤–∞—Ç–Ω—ã–º", 
    "–ò–¥–∏ –ø–æ –≥—É–ª—è–π", 
    "–° —Ö–æ–¥–∏ –ø–æ –µ—à—å!", 
    "–ù–µ –±—É–¥—å –∫–∞–∫ –≤—Å–µ", 
    "–ù–µ –±—É–¥—å –ª–æ—Ö–æ–º",
    "–ù–µ –≥—É–ª—è–π –¥–æ –ø–æ–∑–Ω–∞",
    "–û–±–Ω–æ–≤–∏ —Ç–µ–ª–µ—Ñ–æ–Ω!",
    "–ü–æ —Å–ª—É—à–∞–π –º—É–∑—ã–∫—É!",
    "–ë—É–¥—å –ø—Ä–æ—â–µ!",
    "–ë—É–¥—å —Å–º–µ–ª–µ–µ!",
    "–ë—É–¥—å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º",
    "–ù–µ –¥–µ–ª–∞–π –æ—à–∏–±–∫–∏",
    "–ù–µ –Ω–∞—Ä—É—à–∞–π –ø—Ä–∞–≤–∏–ª–æ",
    "–°—Ç—Ä–∏–º–∏—Å—å –∫ –ª—É—á—à–µ–º—É!",
    "–ë—É–¥—å —Å–æ–±–æ–π!",
    "–û—Å–≤–æ–±–æ–¥–∏—Ç–µ –ø–∞–º—è—Ç—å —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è –ì–ª–∞–≤–Ω–æ–≥–æ!"
];

/* ID —Å–æ–∑–¥–∞—Ç–µ–ª—è */
const creator_id = '410838014990876672';

/* Bot Online */
bot.on("ready", async () => {
    console.log(`${bot.user.username} is online`);  
    bot.user.setActivity(`-help | CONFA GAMES`, {type: "WATCHING"});     //–°–º–æ—Ç—Ä–∏—Ç   {},
    //bot.user.setGame("-help | ");
});

/* Function for Greeting */
function declOfNum(number, titles) {
    let cases = [2, 0, 1, 1, 1, 2];
    return titles[ (number%100>4 && number%100<20)? 2 : cases[(number%10<5)?number%10:5] ];
}

/* Greeting */
bot.on("guildMemberAdd", member => {
    let boticon = "https://images-ext-2.discordapp.net/external/YsSMlCi2Ht7AJ_Aove5P9vCIV8H8hVYdAaQ8avwWoTY/https/images-ext-1.discordapp.net/external/aD8rh4IUxApLYtTc4tVmAq5uqnGw7Vz1b9xaxNXKQAc/%253Fsize%253D2048/https/cdn.discordapp.com/avatars/473439364546953237/12cf86ee18a26d4b03faba85e434aa3c.png" 
    const embed = new Discord.RichEmbed()
        .setTitle("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ –Ω–∞—à —Å–µ—Ä–≤–µ—Ä " + member.guild.name)
        .setColor("3B024D")
        .setDescription("–ù–∞ –Ω–∞—à–µ–º —Å–µ—Ä–≤–µ—Ä–µ —Ç—ã —Å–º–æ–∂–µ—à—å –ø–æ–æ–±—â–∞—Ç—å—Å—è –∏–ª–∏ –Ω–∞–π—Ç–∏ –Ω–æ–≤—ã—Ö –¥—Ä—É–∑–µ–π –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–Ω–æ–π –∏–≥—Ä—ã." + 
        "\n__**–ú—ã —Ä–∞–¥—ã —á—Ç–æ —Ç—ã –ø—Ä–∏—Å–æ–µ–¥–µ–Ω–∏—Å–ª—è –∫ –Ω–∞–º, —Ç–µ–ø–µ—Ä—å —É –Ω–∞—Å –Ω–∞ –æ–¥–Ω–æ–≥–æ –ì–ï–ô–ú–ï–†–ê –±–æ–ª—å—à–µ!**__" + 
        `\n–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ **${member.guild.memberCount} ${declOfNum(member.guild.memberCount, ['—á–µ–ª–æ–≤–µ–∫', '—á–µ–ª–æ–≤–µ–∫–∞', '—á–µ–ª–æ–≤–µ–∫'])}**`)
        .setFooter("CONFA GAMES")
        .setThumbnail(boticon)
        .setTimestamp();
        member.user.send({embed});
});

bot.on("guildMemberRemove", member => {
    let rChannel = member.guild.channels.find(`name`, "chat");
    rChannel.send(`${member}` + " —Ç–æ–ª—å–∫–æ —á—Ç–æ –ø–æ–∫–∏–Ω—É–ª —Å–µ—Ä–≤–µ—Ä **CONFA GAMES**");
});

//–∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞
bot.on('message', message => {

    if(message.author.bot) return;
    if(message.channel.type === "dm") return;

    let server_name = (server_n[Math.floor(Math.random() * server_n.length)])
    const args = message.content.slice(p.length).trim().split(/ +/g);
    const command = args.shift().toLowerCase();

    if(!coins[message.author.id]){
        coins[message.author.id] = {
        coins: 0
        };
        }
    
      let coinAmt = Math.floor(Math.random() * 15) + 1;
      let baseAmt = Math.floor(Math.random() * 15) + 1;
      console.log(`${coinAmt} ; ${baseAmt}`);
    
      if(coinAmt === baseAmt){
        coins[message.author.id] = {
          coins: coins[message.author.id].coins + coinAmt
        };
      fs.writeFile("./coins.json", JSON.stringify(coins), (err) => {
        if (err) console.log(err)
      });
      let coinEmbed = new Discord.RichEmbed()
    .setAuthor(message.author.username)
    .setColor("ffd500")
    .setDescription("üí∏" + ` –î–æ–±–∞–≤–ª–µ–Ω–æ ${coinAmt} –ö–æ–∏–Ω–æ–≤!`)
    .setFooter(server_name)
    .setTimestamp();
    
      message.channel.send(coinEmbed).then(msg => {msg.delete(15000)});
    }

    let xpAdd = Math.floor(Math.random() * 7) + 8;
    console.log(xpAdd);

    if(!xp[message.author.id]){
        xp[message.author.id] = {
        xp: 0,
        level: 1
        };
    }

  let curxp = xp[message.author.id].xp;
  let curlvl = xp[message.author.id].level;
  let nxtLvl = xp[message.author.id].level * 300;
  xp[message.author.id].xp =  curxp + xpAdd;
  if(nxtLvl <= xp[message.author.id].xp){
    xp[message.author.id].level = curlvl + 1;
    let lvlup = new Discord.RichEmbed()
    .setTitle("**–ù–æ–≤—ã–π —É—Ä–æ–≤–µ–Ω—å!**")
    .setColor("ffd500")
    .setDescription("–£—Ä–æ–≤–µ–Ω—å –ø–æ–≤—ã—à–µ–Ω –¥–æ" + curlvl + 1 + "-–≥–æ")
    .setFooter(server_name)
    .setTimestamp();

    message.channel.send(lvlup).then(msg => {msg.delete(15000)});
  }
  fs.writeFile("./xp.json", JSON.stringify(xp), (err) => {
    if(err) console.log(err)
  });

    if(message.content.startsWith(p + `help`)) {
        let hicon = "http://download.seaicons.com/icons/paomedia/small-n-flat/1024/sign-question-icon.png"
                 
        message.delete()
        const embed = new Discord.RichEmbed()
            .setTitle("#‚É£ –ü–æ–º–æ—â—å")
            .setColor("ffd500")
            .setDescription("üìú **–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥:**\n\n‚ö† **Moderation:**\n-ban [user] [reason] - –ó–∞ –±–∞–Ω–∏—Ç—å. (‚ö† –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ !)\n-kick [user] [reason] - –ö–∏–∫–Ω—É—Ç—å.\n-report [user] [reason] - –ù–∞–ø–∏—Å–∞—Ç—å —Ä–µ–ø–æ—Ä—Ç.\n-clear [number] - –û—á–∏—Å—Ç–∏—Ç—å —á–∞—Ç.\n\n‚Ñπ **Info:**\n-serverinfo - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä–≤–µ—Ä–µ.\n-botinfo - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ.\n-news [text] - –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ—Å—Ç—å.\n\n‚öú **Fun:**\n-kiss [user] - –ü–æ—Ü–µ–ª–æ–≤–∞—Ç—å.\n-hug [user] - –û–±–Ω—è—Ç—å.\n-pat [user] - –ü–æ–≥–ª–∞–¥–∏—Ç—å –ø–æ –≥–æ–ª–æ–≤–µ.\n-slap [user] - –£–¥–∞—Ä–∏—Ç—å.\n-tickle [user] - –ü–æ—â–µ–∫–æ—Ç–∞—Ç—å.\n-cuddle [user] - –ü—Ä–∏–∂–∞—Ç—Å—è.\n-poke [user] - –¢—ã–∫–Ω—É—Ç—å.\n\nüéÆ **Games:**\n-rsp [–∫/–Ω/–±] - –∫–∞–º–µ–Ω—å/–Ω–æ–∂–Ω–∏—Ü–∏/–±—É–º–∞–≥–∞.\n-ship [–Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ] - –ú–ê–¢–ß–ú–ï–ô–ö–ò–ù–ì.\n\nüåê **Social:**\n-sms [user] [message] - –û—Ç–ø—Ä–∞–≤–ª—é sms –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.\n-idea [text] - –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∏–¥–µ—é –æ–± —É–ª—É—á—à–µ–Ω–∏–∏ —Å–µ—Ä–≤–µ—Ä–∞.\n-level - –£–∑–Ω–∞—Ç—å —Å–≤–æ–π —É—Ä–æ–≤–µ–Ω—å.\n-coins - –£–∑–Ω–∞—Ç—å —Å–∫–æ–ª—å–∫–æ –ö–æ–∏–Ω–æ–≤.\n-pay [@user] [number] - –ü–µ—Ä–µ–¥–∞—Ç—å –∫–æ–∏–Ω—ã.\n\nüîß **Tools:**\n-avatar [user] - –ü–æ–∫–∞–∂—É –∞–≤–∞—Ç–∞—Ä–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.\n-ping - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–∏–Ω–≥ –±–æ—Ç–∞.\n-test - –¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –±–æ—Ç–∞.\n-eval [code] - –≠–º—É–ª–∏—Ä–æ–≤–∞—Ç—å –∫–æ–¥.\n-say [text] - –°–∫–∞–∑–∞—Ç—å –æ—Ç –∏–º–µ–Ω–∏ –±–æ—Ç–∞.\n\nüö© **Other:**\n-afk - –°–∫–∞–∂—É —á—Ç–æ –≤—ã –æ—Ç–æ—à–ª–∏.\n-creator - –£–∑–Ω–∞—Ç—å –∫—Ç–æ —Å–æ–∑–¥–∞—Ç–µ–ª—å –±–æ—Ç–∞!\n-bot on - –ë–æ—Ç –±—É–¥–µ—Ç –≤–µ—á–Ω–æ –ø–∏—Å–∞—Ç—å.\n-bot off - –ë–æ—Ç –Ω–µ –±—É–¥–µ—Ç –ø–∏—Å–∞—Ç—å.")
            .setFooter(server_name)
            .setThumbnail(hicon)
            .setTimestamp();
        message.channel.send({embed}).then(sentMessage => {   
        sentMessage.react('üá≠')
            .then(() => sentMessage.react('üá™'))
                .then(() => sentMessage.react('üá±'))
                .then(() => sentMessage.react('üáµ'))
                .catch(() => errors.noReason(message, "–û–¥–∏–Ω –∏–∑ emoji –Ω–µ –æ—Ç—Ä–µ–∞–≥–∏—Ä–æ–≤–∞–ª!"));
    });
    }

    if(message.content.startsWith(p + `pay`)) {
    
    if(!args[0]) return errors.noReason(message, "–£–∫–∞–∂–∏—Ç–µ [@user] [number]");
    if(!coins[message.author.id]){
        return errors.noReason(message, "–£ –≤–∞—Å –Ω–µ—Ç –∫–æ–∏–Ω–æ–≤!")
      }
    
      let pUser = message.guild.member(message.mentions.users.first()) || message.guild.members.get(args[0]);
    
      if(!coins[pUser.id]){
        coins[pUser.id] = {
          coins: 0
        };
      }
    
      let pCoins = coins[pUser.id].coins;
      let sCoins = coins[message.author.id].coins;
    
      if(sCoins < args[0]) return errors.noReason(message, "–ù–µ —Ö–≤–∞—Ç–∞–µ—Ç –∫–æ–∏–Ω–æ–≤!");
    
      coins[message.author.id] = {
        coins: sCoins - parseInt(args[1])
      };
    
      coins[pUser.id] = {
        coins: pCoins + parseInt(args[1])
      };
    
      message.channel.send(`${message.author} –¥–∞–ª ${pUser} ${args[1]} –∫–æ–∏–Ω–æ–≤.`);
    
      fs.writeFile("./coins.json", JSON.stringify(coins), (err) => {
        if(err) cosole.log(err)
      });
    }

    if(message.content.startsWith(p + `coins`)) {
        message.delete();
    if(!coins[message.author.id]){
        coins[message.author.id] = {
          coins: 0
        };
      }
    
      let uCoins = coins[message.author.id].coins;
    
    
      let coinEmbed = new Discord.RichEmbed()
      .setAuthor(message.author.username)
      .setColor("#ffd500")
      .setDescription("üí∏" + uCoins + " –∫–æ–∏–Ω–æ–≤!")
      .setFooter(server_name)
      .setTimestamp();
    
      message.channel.send(coinEmbed).then(msg => {msg.delete(15000)});
    }

    if(message.content.startsWith(p + `level`)) {
        message.delete();

        if(!xp[message.author.id]){
         xp[message.author.id] = {
           xp: 0,
           level: 1
        };
      }
        let curxp = xp[message.author.id].xp;
        let curlvl = xp[message.author.id].level;
        let nxtLvlXp = curlvl * 300;
        let difference = nxtLvlXp - curxp;
      
        let lvlEmbed = new Discord.RichEmbed()
        .setAuthor(message.author.username)
        .setColor("ffd500")
        .addField("–£—Ä–æ–≤–µ–Ω—å", curlvl, true)
        .addField("XP", curxp, true)
        .setFooter(`${difference} XP –¥–ª—è –ø–æ–≤—ã—à–µ–Ω–∏—è —É—Ä–æ–≤–Ω—è `, message.author.displayAvatarURL)
        .setTimestamp();
      
        message.channel.send(lvlEmbed).then(msg => {msg.delete(15000)});
      
      }

    if(message.content.startsWith(p + `ship`)) {
        message.delete();
        if (!args[0]) args[0] = message.guild.members.random();
        if (!args[1]) args[1] = message.author
        if (args[0].length > 30 || args[1].length > 30) return errors.noReason(message, "**–ê—Ä–≥—É–º–µ–Ω—Ç –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –¥–ª–∏–Ω–Ω–µ–µ 30 —Å–∏–º–≤–æ–ª–æ–≤**");
        let loveText
        let shkala
        let percents = Math.floor(Math.random() * 100) + 1;
        if (percents <= 99) {loveText = '–ù–µ—Ä–µ–∞–ª—å–Ω–æ !!! :heart_eyes:'; shkala = '‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ°';}
        if (percents <= 89) {loveText = '–ü—Ä–µ–≤–æ—Å—Ö–æ–¥–Ω–æ! :heartpulse:'; shkala = '‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ°‚ñ°';}
        if (percents <= 79) {loveText = '–º–º–º :3 –Ω–µ —á–æ —Ç–∞–∫ !'; shkala = '‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ°‚ñ°‚ñ°';}
        if (percents <= 69) {loveText = '–î—Ä—É–∂–µ—Å–∫–∏ :+1:'; shkala = '‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ°‚ñ°‚ñ°‚ñ°';}
        if (percents <= 59) {loveText = '–ù–µ–ø–ª–æ—Ö–æ :confused:'; shkala = '‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ°‚ñ°‚ñ°‚ñ°‚ñ°';}
        if (percents <= 49) {loveText = '–°—Ä–µ–¥–Ω–µ :thinking:'; shkala = '‚ñ†‚ñ†‚ñ†‚ñ†‚ñ°‚ñ°‚ñ°‚ñ°‚ñ°‚ñ°';}
        if (percents <= 49) {loveText = '–ü–ª–æ—Ö–æ :frowning2:'; shkala = '‚ñ†‚ñ†‚ñ†‚ñ°‚ñ°‚ñ°‚ñ°‚ñ°‚ñ°‚ñ°';}
        if (percents <= 29) {loveText = '–û—á–µ–Ω—å –ø–ª–æ—Ö–æ :disappointed_relieved:'; shkala = '‚ñ†‚ñ†‚ñ°‚ñ°‚ñ°‚ñ°‚ñ°‚ñ°‚ñ°‚ñ°';}
        if (percents <= 19) {loveText = '–£–∂–∞—Å–Ω–æ :sob:'; shkala = '‚ñ†‚ñ°‚ñ°‚ñ°‚ñ°‚ñ°‚ñ°‚ñ°‚ñ°‚ñ°';}
        if (percents <= 9) {loveText = '–•—É–∂–µ –Ω–µ–∫—É–¥–∞ :poop:'; shkala = '‚ñ°‚ñ°‚ñ°‚ñ°‚ñ°‚ñ°‚ñ°‚ñ°‚ñ°‚ñ°';}
        if (percents >= 100) {loveText = '–ò–î–ï–ê–õ–¨–ù–û!!! üéÆ'; shkala = '‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†'; percents = 100;}
        const embed = new Discord.RichEmbed()
            .setTitle("–ú–ê–¢–ß–ú–ï–ô–ö–ò–ù–ì")
            .setColor("ffd500")
            .setDescription('‚ñº***' + args[0] + '***\n‚ñ≤***' + args[1] + '***\n\nüéÆ –ò–≥—Ä–æ–≤–∞–π **–º–æ—â—å** –≤ –ø—Ä–æ—Ü–µ–Ω–∞—Ç–∞—Ö: **' + percents + '%** `[' + shkala + ']`\n' + '\n\n–í–µ—Ä–¥–∏–∫—Ç: **' + loveText + '**')
            .setFooter(server_name)
            .setTimestamp();
        message.channel.send({embed});
    }

    if(message.content.startsWith(p + `rsp`)) {        
        let userChoice;
                if (!args[0]) {
                    return errors.noReason(message, "–í—ã –∑–∞–±—ã–ª–∏ —É–∫–∞–∑–∞—Ç—å –∫/–Ω/–± !")
                }
                else if (['–∫–∞–º–µ–Ω—å', 'rock', 'r', '–∫'].includes(args[0].toLowerCase())) {
                    userChoice = '–∫–∞–º–µ–Ω—å';
                }
                else if (['–±—É–º–∞–≥—É', '–±—É–º–∞–≥–∞', 'paper', 'p', '–±'].includes(args[0].toLowerCase())) {
                    userChoice = '–±—É–º–∞–≥—É';
                }
                else if (['scissors', '–Ω–æ–∂–Ω–∏—Ü—ã', 's', '–Ω'].includes(args[0].toLowerCase())) {
                    userChoice = '–Ω–æ–∂–Ω–∏—Ü—ã';
                } else {
                    userChoice = 'Incorrect';
                }
                let computerChoice = Math.random();
                if (computerChoice < 0.34) {
                    computerChoice = "–∫–∞–º–µ–Ω—å";
                } else if(computerChoice <= 0.67) {
                    computerChoice = "–±—É–º–∞–≥—É";
                } else {
                    computerChoice = "–Ω–æ–∂–Ω–∏—Ü—ã";
                }
                function rspCW(userChoice, computerChoice) {
                    let award = Math.floor(Math.random() * 3) + 1;
                    if (userChoice === computerChoice) {
                        return "**–ù–∏—á—å—è!**üòÄ";
                    }
                    else if(userChoice === "–∫–∞–º–µ–Ω—å") {
                        if(computerChoice === "–Ω–æ–∂–Ω–∏—Ü—ã") {
                            return "**–¢—ã –≤—ã–∏–≥—Ä–∞–ª(–∞)!** üò¢";
                        }
                        else if (computerChoice === "–±—É–º–∞–≥—É") {
                            return "**–¢—ã –ø—Ä–æ–∏–≥—Ä–∞–ª(–∞).** üòé";
                        }
                    }
                    else if(userChoice === "–±—É–º–∞–≥—É") {
                        if(computerChoice === "–∫–∞–º–µ–Ω—å") {
                            return "**–¢—ã –≤—ã–∏–≥—Ä–∞–ª(–∞)!** üò¢";
                        } else if (computerChoice === "–Ω–æ–∂–Ω–∏—Ü—ã") {
                            return "**–¢—ã –ø—Ä–æ–∏–≥—Ä–∞–ª(–∞).** üòé";
                        }
                    }
                    else if(userChoice === "–Ω–æ–∂–Ω–∏—Ü—ã") {
                        if(computerChoice === "–±—É–º–∞–≥—É") {
                            return "**–¢—ã –≤—ã–∏–≥—Ä–∞–ª(–∞)!** üò¢";
                        } else if (computerChoice === "–∫–∞–º–µ–Ω—å") {
                            return "**–¢—ã –ø—Ä–æ–∏–≥—Ä–∞–ª(–∞).** üòé";
                        }
                    }
                    else if (userChoice === 'Incorrect') {
                        return " **–¢—ã –Ω–µ –≤—ã–±—Ä–∞–ª –Ω–∏ –∫–∞–º–µ–Ω—å, –Ω–∏ –Ω–æ–∂–Ω–∏—Ü—ã, –Ω–∏ –±—É–º–∞–≥—É**";
                    }
                }
                if (userChoice === 'Incorrect') {
                    message.channel.send(message.author + rspCW(userChoice, computerChoice))
                }
                else {
                const embed = new Discord.RichEmbed()
                .setTitle(rspCW(userChoice, computerChoice))
                .setColor('RANDOM')
                .addField("**–ë–æ—Ç –≤—ã–±—Ä–∞–ª**", computerChoice, true)
                .addField("**–¢—ã –≤—ã–±—Ä–∞–ª(a)**", userChoice, true)
                .setFooter(server_name)
                .setTimestamp();
                message.channel.send({embed})
                message.delete();
             }
            };

    if(message.content.startsWith(p + `avatar`)) {
        let member = message.mentions.members.first();
        if (!member) return errors.noReason(message, "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∞–≤–∞—Ç–∞—Ä–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è !");
        const embed = new Discord.RichEmbed()
            .setTitle(`–ê–≤–∞—Ç–∞—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${member.user.tag}`)
            .setImage(member.user.avatarURL)
            .setFooter(server_name)
            .setColor("ffd500")
            .setTimestamp()
            .setDescription('–ê–≤–∞—Ç–∞—Ä–∫–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∞ –ø–æ –∑–∞–ø—Ä–æ—Å—É '+ message.author);
        message.channel.send({embed});
        message.delete();
    }

    if (message.content.startsWith(p + `kiss`)) {
        message.delete();
        let user = message.author;
        let user1 = message.mentions.users.first();
        if (!user1 || user1.id === user.id) {
            user = bot.user;
            user1 = message.author;
        }
        message.channel.send('–ó–∞–≥—Ä—É–∑–∫–∞...').then(msg => {
            request('https://nekos.life/api/v2/img/kiss', function (error, response, body) {
                try {
                    let arr = JSON.parse(body);
                    let embed = new Discord.RichEmbed()
                        .setDescription(`${user} **–ø–æ—Ü–µ–ª–æ–≤–∞–ª(–∞)** ${user1}`)
                        .setImage(arr['url'])
                        .setColor('RANDOM')
                        .setFooter(server_name) 
                        .setTimestamp(); 
                        msg.edit({embed
                        }).then(function(message) {
                            message.react("‚ô•")
                        }).catch(function() {});
                        } catch (e) {
                       console.log(e)
                 }
            });
        });
    }

    if (message.content.startsWith(p + `hug`)) {
        message.delete();
        let user = message.author;
        let user1 = message.mentions.users.first();
        if (!user1 || user1.id === user.id) {
            user = bot.user;
            user1 = message.author;
        }
        message.channel.send('–ó–∞–≥—Ä—É–∑–∫–∞...').then(msg => {
            request('https://nekos.life/api/v2/img/hug', function (error, response, body) {
                try {
                    let arr = JSON.parse(body);
                    let embed = new Discord.RichEmbed()
                        .setDescription(`${user} **–æ–±–Ω—è–ª(–∞)** ${user1}`)
                        .setImage(arr['url'])
                        .setColor('RANDOM')
                       .setFooter(server_name) 
                       .setTimestamp();
                       msg.edit({embed
                       }).then(function(message) {
                           message.react("ü§ù")
                       }).catch(function() {});
                       } catch (e) {
                      console.log(e)
                 }
            });
        });
    }

    if (message.content.startsWith(p + `pat`)) {
        message.delete();
        let user = message.author;
        let user1 = message.mentions.users.first();
        if (!user1 || user1.id === user.id) {
            user = bot.user;
            user1 = message.author;
        }
        message.channel.send('–ó–∞–≥—Ä—É–∑–∫–∞...').then(msg => {
            request('https://nekos.life/api/v2/img/pat', function (error, response, body) {
                try {
                    let arr = JSON.parse(body);
                    let embed = new Discord.RichEmbed()
                        .setDescription(`${user} **–ø–æ–≥–ª–∞–¥–∏–ª(–∞) –ø–æ –≥–æ–ª–æ–≤–µ** ${user1}`)
                        .setImage(arr['url'])
                        .setColor('RANDOM')
                        .setFooter(server_name) 
                        .setTimestamp();
                        msg.edit({embed
                    }).then(function(message) {
                        message.react("‚úã")
                    }).catch(function() {});
                    } catch (e) {
                   console.log(e)
                     }
                });
            });
        }

        if (message.content.startsWith(p + `slap`)) {
        message.delete();
        let user = message.author;
        let user1 = message.mentions.users.first();
        if (!user1 || user1.id === user.id) {
            user = bot.user;
            user1 = message.author;
        }
        message.channel.send('–ó–∞–≥—Ä—É–∑–∫–∞...').then(msg => {
            request('https://nekos.life/api/v2/img/slap', function (error, response, body) {
                try {
                    let arr = JSON.parse(body);
                    let embed = new Discord.RichEmbed()
                        .setDescription(`${user} **—É–¥–∞—Ä–∏–ª(–∞)** ${user1}`)
                        .setImage(arr['url'])
                        .setColor('RANDOM')
                        .setFooter(server_name) 
                        .setTimestamp();
                        msg.edit({embed
                        }).then(function(message) {
                            message.react("üëä")
                        }).catch(function() {});
                        } catch (e) {
                       console.log(e)
                 }
            });
        });
    }

    if (message.content.startsWith(p + `poke`)) {
        message.delete();
        let user = message.author;
        let user1 = message.mentions.users.first();
        if (!user1 || user1.id === user.id) {
            user = bot.user;
            user1 = message.author;
        }
        message.channel.send('–ó–∞–≥—Ä—É–∑–∫–∞...').then(msg => {
            request('https://nekos.life/api/v2/img/poke', function (error, response, body) {
                try {
                    let arr = JSON.parse(body);
                    let embed = new Discord.RichEmbed()
                        .setDescription(`${user} **—Ç—ã–∫–Ω—É–ª(–∞) –≤** ${user1}`)
                        .setImage(arr['url'])
                        .setColor('RANDOM')
                        .setFooter(server_name) 
                        .setTimestamp();
                        msg.edit({embed
                        }).then(function(message) {
                            message.react("üëâ")
                        }).catch(function() {});
                        } catch (e) {
                       console.log(e)
                 }
            });
        });
    }

    if (message.content.startsWith(p + `cuddle`)) {
        message.delete();
        let user = message.author;
        let user1 = message.mentions.users.first();
        if (!user1 || user1.id === user.id) {
            user = bot.user;
            user1 = message.author;
        }
        message.channel.send('–ó–∞–≥—Ä—É–∑–∫–∞...').then(msg => {
            request('https://nekos.life/api/v2/img/cuddle', function (error, response, body) {
                try {
                    let arr = JSON.parse(body);
                    let embed = new Discord.RichEmbed()
                        .setTitle(':3')
                        .setDescription(`${user} **–ø—Ä–∏–∂–∞–ª(–∞)—Å—è –∫** ${user1}`)
                        .setImage(arr['url'])
                        .setColor('RANDOM')
                        .setFooter(server_name) 
                        .setTimestamp();
                        msg.edit({embed
                        }).then(function(message) {
                            message.react("üëê")
                        }).catch(function() {});
                        } catch (e) {
                       console.log(e)
                 }
            });
        });
    }
    
    if (message.content.startsWith(p + `tickle`)) {
        message.delete();
        let user = message.author;
        let user1 = message.mentions.users.first();
        if (!user1 || user1.id === user.id) {
            user = bot.user;
            user1 = message.author;
        }
        message.channel.send('–ó–∞–≥—Ä—É–∑–∫–∞...').then(msg => {
            request('https://nekos.life/api/v2/img/tickle', function (error, response, body) {
                try {
                    let arr = JSON.parse(body);
                    let embed = new Discord.RichEmbed()
                        .setDescription(`${user} **–ø–æ—â–µ–∫–æ—Ç–∞–ª(–∞)** ${user1}`)
                        .setImage(arr['url'])
                        .setColor('RANDOM')
                        .setFooter(server_name) 
                        .setTimestamp(); 
                        msg.edit({embed
                        }).then(function(message) {
                            message.react("ü§£")
                        }).catch(function() {});
                        } catch (e) {
                       console.log(e)
                 }
            });
        });
    }

    if (message.content.startsWith(p + `bot on`)) {
        message.delete().catch(O_o=>{});
        message.channel.startTyping();
    }

    if (message.content.startsWith(p + `bot off`)) {
        message.delete().catch(O_o=>{});
        message.channel.stopTyping();
    }

    if(message.content.startsWith(p + 'say')) {
        if(!args[0]) return errors.noReason(message, "–£–∫–∞–∂–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ !");
        message.delete().catch(O_o=>{});
        let say = message.content.slice((p + 'say').length);
        message.channel.send(say);
    }

    if(message.content.startsWith(p + 'creator')) {
        let creata = "https://cdn.discordapp.com/avatars/410838014990876672/ad85a9456ed202a722ba25d4cdbc1dd4.png?size=2048"
        message.delete()
        let vk = "vk.com/nikita.feed"
        let grouv = "vk.com/vk.nikitafox"
        let embed = new Discord.RichEmbed()
        .setTitle("üîß –°–æ–∑–¥–∞—Ç–µ–ª—å")
        .setColor("ffd500")
        .setDescription("NIKITA FOX#5591")
        .addField("üåê –°–æ—Ü—Å–µ—Ç–∏", `–Ø –≤ –í–ö - ${vk}\n` + `–ì—Ä—É–ø–ø–∞ –≤ –í–ö - ${grouv}` )
        .setThumbnail(creata)
        .setFooter(server_name)
        .setTimestamp()
        message.channel.send({embed})
    }  

    if(message.content.startsWith(p + `afk`)) {
    var afk1 = "https://google.ru.net/wp-content/uploads/2018/07/%D0%B7%D0%B0%D0%B3%D1%80%D1%83%D0%B7%D0%BA%D0%B0-%D0%BA%D0%BE%D1%82%D0%B0.gif"
        

        message.delete().catch(O_o=>{});
        let embed = new Discord.RichEmbed ()
        .setTitle(`**${message.member.displayName}**` + " –æ—Ç–æ—à–µ–ª, —Å–∫–æ—Ä–æ –≤–µ—Ä–Ω—ë—Ç—Å—è!")
        .setColor("ffd500")
        .setFooter(server_name)
        .setThumbnail(afk1)
        .setTimestamp();
        message.channel.send({embed}).then(sentMessage => {   
            sentMessage.react('üí§')
        });
    }

    if (message.content.startsWith(p + `eval`) && message.author.id === "410838014990876672" || message.author.id === "") {
        message.delete().catch(O_o=>{});
        const code = message.content.split(" ").slice(1).join(" ");
        try {
         let evaled = eval(code);
         if (!code) {
            return errors.noReason(message, "–í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ –∫–æ–¥ !");
        }
    
         if (typeof evaled !== 'string')
           evaled = require('util').inspect(evaled);
        
           const embed = new Discord.RichEmbed()
           .setTitle(`EVAL ‚úÖ`)
       
           .setColor("0x4f351")
           .setDescription(`üì• Input: \n \`\`\`${code}\`\`\` \n üì§ Output: \n  \`\`\`${(evaled)}\`\`\``)
       
         message.channel.send({embed});
        } catch (err) {
         const embed = new Discord.RichEmbed()
         .setTitle(`EVAL ‚ùå`)
  
         .setColor("0xff0202")
         .setDescription(`üì• Input: \n \`\`\`${code}\`\`\` \n üì§ Output: \n  \`\`\`${(err)}\`\`\``)
    
         message.channel.send({embed});
       }
    }

    if (message.content.startsWith(p + `test`)) {
        message.delete();
        let user = message.author;
        message.channel.send('–ó–∞–≥—Ä—É–∑–∫–∞...').then(msg => {
            const urls = [
    "https://discordemoji.com/assets/emoji/WarningPC.gif",
    "https://discordemoji.com/assets/emoji/Feels3DMan.gif",
    "https://discordemoji.com/assets/emoji/BestMates.gif"
    ];
    let embed = new Discord.RichEmbed()
          .setDescription(`**–¢–µ—Å—Ç –±–æ—Ç–∞**`)
          .setImage(urls[Math.floor(Math.random() * urls.length)])
          .setColor('RANDOM')
          .setTimestamp()
          .setFooter(server_name);
        msg.edit({embed}).then(function(message) {
              message.react("‚úÖ")
          }).catch(function() {});
    });
    }

    if (message.content.startsWith(p + 'ping')) {
        message.delete().catch(O_o => {});
        const embed = new Discord.RichEmbed()
    .setTitle("–°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å —Å–µ—Ä–≤–µ—Ä–æ–º")
    .setColor("ffd500")
    .setDescription(`Ping \`\`${bot.pings[0]}ms\`\``)
    .setFooter(server_name)
    .setTimestamp();
    message.channel.send({embed});
    }

    if (message.content.startsWith(p + 'clear')) {
        if(!message.member.hasPermission("MANAGE_MESSAGES")) return errors.noPerms(message, "MANAGE_MESSAGES");
        if(!args[0]) return errors.noReason(message, "–£–∫–∞–∂–∏—Ç–µ —á–∏—Å–ª–æ!");
        message.delete()
        message.channel.bulkDelete(args[0]).then(() => {
        message.channel.send("–£–¥–∞–ª–µ–Ω–Ω–æ " + `\`\`${args[0]}\`\`` + " —Å–æ–æ–±—â–µ–Ω–∏–π.").then(msg => msg.delete(5000));
    });
    }

    if (message.content.startsWith(p + 'sms')) {
        let user = message.mentions.members.first();
            if (message.member.hasPermission("MANAGE_MESSAGES")) {
                if (!user) {
                    message.delete
                    return errors.noReason(message, "–£–∫–∞–∂–∏—Ç–µ –ø–æ–ª—É—á–∞—Ç–µ–ª—è !");
                    return
                }
                const sendMessage = args.join(" ");
                let msg = user.send('**–í–∞–º –ø—Ä–∏—à–ª–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç ' + message.author + '. –û–Ω —Å–∫–∞–∑–∞–ª:**' + sendMessage.replace(user, '')).catch(()=>{message.reply('–û—à–∏–±–∫–∞. –ü—Ä–∏—á–∏–Ω–∞: **–ù–µ —É–∫–∞–∑–∞–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ**');
                })
                message.delete().catch(O_o=>{});
            } else {
                return errors.noReason(message, "MANAGE_MESSAGES");
        }
        
    }

    if (message.content.startsWith(p + 'idea')) {
        message.delete();
        if(!args[0]) return errors.noReason(message, "–í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ –∏–¥–µ—é, —É–∫–∞–∂–∏—Ç–µ –µ—ë !");
        let idea = args.join(" ");
        message.guild.owner.send({embed: {
            color: 16711680,
            title: "–ò–¥–µ—è",
            description: "**–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å** " + message.author + " **–ø—Ä–∏—Å–ª–∞–ª –≤–∞–º –∏–¥–µ—é:** " + idea,
            footer: {
                text: server_name,
            },
        }});
    }

    if (message.content.startsWith(p + 'news')) {
        message.delete();
        if(!args[0]) return errors.noReason(message, "–£–∑–∞–∂–∏—Ç–µ –Ω–æ–≤–æ—Å—Ç—å !");
        if(!message.member.hasPermission("MANAGE_MESSAGES")) return errors.noPerms(message, "MANAGE_MESSAGES");
        let news = args.join(" ");
        let embed = new Discord.RichEmbed()
        .setTitle("–ù–æ–≤–æ—Å—Ç–∏")
        .setDescription(news)
        .setColor("ffd500")
        .setTimestamp()
        .setFooter(server_name);
        let newsChannel = message.guild.channels.find(`name`, "news");
        if (!newsChannel) return errors.noReason(message, "–ù–µ –≤–æ–∑–º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ –∫–∞–Ω–∞–ª news");
        newsChannel.send(embed).then(sentMessage => {   
            sentMessage.react('‚úÖ')
                .then(() => sentMessage.react('‚ùé'))
        });
        return;   
    }

    /* ---------- –ú–æ–¥–µ–ª–∞—Ü–∏—è ---------- */
    /* ---------- –ú–æ–¥–µ–ª–∞—Ü–∏—è ---------- */
    /* ---------- –ú–æ–¥–µ–ª–∞—Ü–∏—è ---------- */

    if (message.content.startsWith(p + 'kick')) {

        if(!args[0]) return errors.noReason(message, "–£–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è !");
        message.delete().catch(O_o => {});
        let kUser = message.guild.member(message.mentions.users.first() || message.guild.members.get(args[0]));
        if(!kUser) return errors.noReason(message, "–ù–µ—É–¥–æ–ª–æ—Å—å –Ω–∞–π—Ç–∏ –¥–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è !");
        let kReason = args.join(" ").slice(22);
        if(!message.member.hasPermission("MANAGE_MESSAGES")) return errors.noPerms(message, "MANAGE_MESSAGES");
        if(kUser.hasPermission("MANAGE_MESSAGES")) return errors.noW(message, "–¢–∞–∫–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ–ª—å–∑—è –∫–∏–∫–Ω—É—Ç—å !");
    
        let kickEmbed = new Discord.RichEmbed()
        .setDescription("**Kick**")
        .setColor("#b70000")
        .addField("Kicked User", `${kUser} with ID ${kUser.id}`)
        .addField("Kicked By", `<@${message.author.id}> with ID ${message.author.id}`)
        .addField("Kicked In", message.channel)
        .addField("Tiime", message.createdAt)
        .addField("Reason", kReason)
        .setFooter(server_name);
    
        let kickChannel = message.guild.channels.find(`name`, "üîßlog-bots");
        if(!kickChannel) return errors.noReason(message, "–ù–µ –≤–æ–∑–º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ –∫–∞–Ω–∞–ª üîßlog-bots");
    
        message.guild.member(kUser).kick(kReason);
        kickChannel.send(kickEmbed);
    
        return;
    }
    
    /*
    if (message.content.startsWith(p + 'ban')) {

        if(!args[0]) return errors.noReason(message, "–£–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è !");
        message.delete().catch(O_o => {});
        let bUser = message.guild.member(message.mentions.users.first() || message.guild.members.get(args[0]));
        if(!bUser) return errors.noBan(message, "–ù–µ—É–¥–æ–ª–æ—Å—å –Ω–∞–π—Ç–∏ –¥–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è !");
        let bReason = args.join(" ").slice(22);
        if(!message.member.hasPermission("MANAGE_MEMBERS")) return errors.noPerms(message, "MANAGE_MEMBERS");
        if(bUser.hasPermission("MANAGE_MESSAGES")) return errors.noW(message, "–¢–∞–∫–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ–ª—å–∑—è –∑–∞ –±–∞–Ω–∏—Ç—å !");
    
        let banEmbed = new Discord.RichEmbed()
        .setDescription("**Ban**")
        .setColor("#b70000")
        .addField("Banned User", `${bUser} with ID ${bUser.id}`)
        .addField("Banned By", `<@${message.author.id}> with ID ${message.author.id}`)
        .addField("Banned In", message.channel)
        .addField("Time", message.createdAt)
        .addField("Reason", bReason)
        .setFooter(server_name);
    
        let incidentchannel = message.guild.channels.find(`name`, "üîßlog-bots");
        if(!incidentchannel) return errors.noChannel(message, "–ù–µ –≤–æ–∑–º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ –∫–∞–Ω–∞–ª üîßlog-bots");
    
        message.guild.member(bUser).ban(bReason);
        incidentchannel.send(banEmbed);
    
    
        return;
    }
    */
    
    if (message.content.startsWith(p + 'report')) {
    
        if(!args[0]) return errors.noReason(message, "–£–∫–∞–∂–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É !");
        message.delete().catch(O_o => {});
        let rUser = message.guild.member(message.mentions.users.first() || message.guild.members.get(args[0]));
        if(!rUser) return errors.noReason(message, "–ù–µ—É–¥–æ–ª–æ—Å—å –Ω–∞–π—Ç–∏ –¥–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è !");
        let rreason = args.join(" ").slice(22);
    
        let reportEmbed = new Discord.RichEmbed()
        .setDescription("Reports")
        .setColor("#b70000")
        .addField("Reported User", `${rUser} with ID: ${rUser.id}`)
        .addField("Reported By", `${message.author} with ID: ${message.author.id}`)
        .addField("Channel", message.channel)
        .addField("Time", message.createdAt)
        .addField("Reason", rreason)
        .setFooter(server_name);
    
        let reportschannel = message.guild.channels.find(`name`, "üîßlog-bots");
        if(!reportschannel) return errors.noReason(message, "–ù–µ –≤–æ–∑–º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ –∫–∞–Ω–∞–ª üîßlog-bots");
    
    
        message.delete().catch(O_o=>{});
        reportschannel.send(reportEmbed);
    
        return;
    }
    
    /* ---------- –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è ---------- */
    /* ---------- –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è ---------- */
    /* ---------- –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è ---------- */

    if (message.content.startsWith(p + 'serverinfo')) {

        message.delete().catch(O_o => {});
        let sicon = message.guild.iconURL;
        let serverembed = new Discord.RichEmbed()
        .setDescription("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä–≤–µ—Ä–µ")
        .setColor("ffd500")
        .setThumbnail(sicon)
        .addField("Server Name", message.guild.name)
        .addField("Created On", message.guild.createdAt)
        .addField("You Joined", message.member.joinedAt)
        .addField("Total Members", message.guild.memberCount)
        .setFooter(server_name);
    
        return message.channel.send(serverembed);
    }
    
    if (message.content.startsWith(p + 'botinfo')) {

        message.delete().catch(O_o => {});
        let bicon = bot.user.displayAvatarURL;
        let botembed = new Discord.RichEmbed()
        .setDescription("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ")
        .setColor("ffd500")
        .setThumbnail(bicon)
        .addField("Bot Name", bot.user.username)
        .addField("Created On", bot.user.createdAt)
        .setFooter(server_name);
    
        return message.channel.send(botembed);
    }
});

bot.login(botconfig.token);
